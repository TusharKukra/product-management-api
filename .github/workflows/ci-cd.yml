name: Push to Docker CICD Flow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-java:
    name: Build Java Application
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Checkout the repository

    - name: Set up JDK 17
      uses: actions/setup-java@v4  # Set up JDK for Maven build
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build and Test Application
      run: mvn clean install  # Build and test the Java application
      env:
        MAVEN_OPTS: -Dmaven.test.skip=false

    - name: Save Build Artifacts
      uses: actions/upload-artifact@v3  # Save the build output as artifacts
      with:
        name: build-artifacts
        path: target/  # Specify the directory containing the build output (e.g., JAR files)

  build-docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build-java  # Depends on the completion of the Java build job

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Checkout the repository

    - name: Download Build Artifacts
      uses: actions/download-artifact@v3  # Download the artifacts from the previous stage
      with:
        name: build-artifacts

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2  # Set up Docker Buildx for multi-platform builds

    - name: Cache Docker layers
      uses: actions/cache@v2  # Cache Docker build layers
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Log in to Docker Hub
      uses: docker/login-action@v2  # Log in to Docker Hub
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/docker-assignment:latest .
        docker tag ${{ secrets.DOCKER_USERNAME }}/docker-assignment:latest ${{ secrets.DOCKER_USERNAME }}/docker-assignment:product-management-api-cicd

    - name: Save Docker Image as Artifact
      run: docker save ${{ secrets.DOCKER_USERNAME }}/docker-assignment:latest | gzip > docker-image.tar.gz

    - name: Upload Docker Image Artifact
      uses: actions/upload-artifact@v3
      with:
        name: docker-image
        path: docker-image.tar.gz

  push-docker:
    name: Push Docker Image
    runs-on: ubuntu-latest
    needs: build-docker  # Depends on the Docker build job

    steps:
    - name: Download Docker Image Artifact
      uses: actions/download-artifact@v3  # Download the Docker image artifact
      with:
        name: docker-image

    - name: Load Docker Image
      run: gunzip -c docker-image.tar.gz | docker load  # Load the Docker image from the artifact

    - name: Log in to Docker Hub
      uses: docker/login-action@v2  # Log in to Docker Hub
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker Image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/docker-assignment:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/docker-assignment:product-management-api-cicd
