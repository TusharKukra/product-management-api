# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Push to Docker CICD Flow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
    
  build:

    runs-on: ubuntu-latest  # Use the latest Ubuntu image for the runner
 
    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Checkout the repository
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2  # Set up Docker Buildx for building images
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Log in to Docker Hub
      uses: docker/login-action@v2  # Log in to Docker Hub using GitHub Secrets
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v2  # Build and push the Docker image
      with:
        context: .  # The current directory (repository root)
        file: ./Dockerfile  # Path to the Dockerfile
        push: true  # Push the image to Docker Hub
        tags: ${{ secrets.DOCKER_USERNAME }}/docker-assignment:product-management-api-cicd
